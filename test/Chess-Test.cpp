#include "catch_amalgamated.hpp"
#include "Chess-Model.h"

using Catch::Approx;

//................................................
//.TTTTTTTTTTTEEEEEEEEEEE..SSSSSSS....STTTTTTTTT..
//.TTTTTTTTTTTEEEEEEEEEEE.ESSSSSSSS...STTTTTTTTT..
//.TTTTTTTTTTTEEEEEEEEEEE.ESSSSSSSSS..STTTTTTTTT..
//....TTTT....EEEE.......EESSS..SSSS.....TTTT.....
//....TTTT....EEEE.......EESSS...........TTTT.....
//....TTTT....EEEEEEEEEE..ESSSSSS........TTTT.....
//....TTTT....EEEEEEEEEE...SSSSSSSSS.....TTTT.....
//....TTTT....EEEEEEEEEE.....SSSSSSS.....TTTT.....
//....TTTT....EEEE..............SSSSS....TTTT.....
//....TTTT....EEEE.......EESS....SSSS....TTTT.....
//....TTTT....EEEEEEEEEEEEESSSSSSSSSS....TTTT.....
//....TTTT....EEEEEEEEEEE.ESSSSSSSSS.....TTTT.....
//....TTTT....EEEEEEEEEEE..SSSSSSSS......TTTT.....
//................................................

TEST_CASE("Unmove a piece - Unmoving a pawn movement")
{
    board the_board;

    move current_move = {{1,4}, {3,4}};

    the_board.move_piece(current_move);

    board new_board = the_board.unmove_piece();

    REQUIRE(the_board == new_board);
}